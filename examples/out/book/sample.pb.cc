// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: book/sample.proto

#include "book/sample.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_book_2fsample_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Author_book_2fsample_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_book_2fsample_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Book_Page_book_2fsample_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_book_2fsample_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BookStore_BooksEntry_DoNotUse_book_2fsample_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_book_2fsample_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CycleDep1_book_2fsample_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_book_2fsample_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InsideOneOfMessage_book_2fsample_2eproto;
namespace com {
namespace book {
class AuthorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Author> _instance;
} _Author_default_instance_;
class InsideOneOfMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InsideOneOfMessage> _instance;
} _InsideOneOfMessage_default_instance_;
class Book_PageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Book_Page> _instance;
} _Book_Page_default_instance_;
class BookDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Book> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_oneof_string_;
  ::PROTOBUF_NAMESPACE_ID::int64 first_oneof_int_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr second_oneof_string_;
  ::PROTOBUF_NAMESPACE_ID::int64 second_oneof_int_;
  const ::com::book::InsideOneOfMessage* second_oneof_message_;
} _Book_default_instance_;
class GetBookRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBookRequest> _instance;
} _GetBookRequest_default_instance_;
class GetBookViaAuthorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBookViaAuthor> _instance;
} _GetBookViaAuthor_default_instance_;
class BookStore_BooksEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BookStore_BooksEntry_DoNotUse> _instance;
} _BookStore_BooksEntry_DoNotUse_default_instance_;
class BookStoreDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BookStore> _instance;
} _BookStore_default_instance_;
class CycleDep1DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CycleDep1> _instance;
} _CycleDep1_default_instance_;
class CycleDep2DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CycleDep2> _instance;
} _CycleDep2_default_instance_;
}  // namespace book
}  // namespace com
static void InitDefaultsscc_info_Author_book_2fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::book::_Author_default_instance_;
    new (ptr) ::com::book::Author();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::book::Author::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Author_book_2fsample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Author_book_2fsample_2eproto}, {}};

static void InitDefaultsscc_info_Book_book_2fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::book::_Book_default_instance_;
    new (ptr) ::com::book::Book();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::book::Book::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Book_book_2fsample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Book_book_2fsample_2eproto}, {
      &scc_info_Author_book_2fsample_2eproto.base,
      &scc_info_Book_Page_book_2fsample_2eproto.base,
      &scc_info_InsideOneOfMessage_book_2fsample_2eproto.base,}};

static void InitDefaultsscc_info_Book_Page_book_2fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::book::_Book_Page_default_instance_;
    new (ptr) ::com::book::Book_Page();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::book::Book_Page::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Book_Page_book_2fsample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Book_Page_book_2fsample_2eproto}, {}};

static void InitDefaultsscc_info_BookStore_book_2fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::book::_BookStore_default_instance_;
    new (ptr) ::com::book::BookStore();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::book::BookStore::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BookStore_book_2fsample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BookStore_book_2fsample_2eproto}, {
      &scc_info_BookStore_BooksEntry_DoNotUse_book_2fsample_2eproto.base,}};

static void InitDefaultsscc_info_BookStore_BooksEntry_DoNotUse_book_2fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::book::_BookStore_BooksEntry_DoNotUse_default_instance_;
    new (ptr) ::com::book::BookStore_BooksEntry_DoNotUse();
  }
  ::com::book::BookStore_BooksEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BookStore_BooksEntry_DoNotUse_book_2fsample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BookStore_BooksEntry_DoNotUse_book_2fsample_2eproto}, {}};

static void InitDefaultsscc_info_CycleDep1_book_2fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::book::_CycleDep1_default_instance_;
    new (ptr) ::com::book::CycleDep1();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::book::_CycleDep2_default_instance_;
    new (ptr) ::com::book::CycleDep2();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::book::CycleDep1::InitAsDefaultInstance();
  ::com::book::CycleDep2::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CycleDep1_book_2fsample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CycleDep1_book_2fsample_2eproto}, {}};

static void InitDefaultsscc_info_GetBookRequest_book_2fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::book::_GetBookRequest_default_instance_;
    new (ptr) ::com::book::GetBookRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::book::GetBookRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBookRequest_book_2fsample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetBookRequest_book_2fsample_2eproto}, {}};

static void InitDefaultsscc_info_GetBookViaAuthor_book_2fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::book::_GetBookViaAuthor_default_instance_;
    new (ptr) ::com::book::GetBookViaAuthor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::book::GetBookViaAuthor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBookViaAuthor_book_2fsample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetBookViaAuthor_book_2fsample_2eproto}, {}};

static void InitDefaultsscc_info_InsideOneOfMessage_book_2fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::book::_InsideOneOfMessage_default_instance_;
    new (ptr) ::com::book::InsideOneOfMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::book::InsideOneOfMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InsideOneOfMessage_book_2fsample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InsideOneOfMessage_book_2fsample_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_book_2fsample_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_book_2fsample_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_book_2fsample_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_book_2fsample_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::book::Author, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::book::Author, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::book::InsideOneOfMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::book::InsideOneOfMessage, field_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::book::Book_Page, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::book::Book_Page, lines_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::book::Book, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::book::Book, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::book::Book, isbn_),
  PROTOBUF_FIELD_OFFSET(::com::book::Book, title_),
  PROTOBUF_FIELD_OFFSET(::com::book::Book, author_),
  PROTOBUF_FIELD_OFFSET(::com::book::Book, pages_),
  offsetof(::com::book::BookDefaultTypeInternal, first_oneof_string_),
  offsetof(::com::book::BookDefaultTypeInternal, first_oneof_int_),
  PROTOBUF_FIELD_OFFSET(::com::book::Book, availability_),
  PROTOBUF_FIELD_OFFSET(::com::book::Book, recommended_),
  offsetof(::com::book::BookDefaultTypeInternal, second_oneof_string_),
  offsetof(::com::book::BookDefaultTypeInternal, second_oneof_int_),
  offsetof(::com::book::BookDefaultTypeInternal, second_oneof_message_),
  PROTOBUF_FIELD_OFFSET(::com::book::Book, first_oneof_),
  PROTOBUF_FIELD_OFFSET(::com::book::Book, second_oneof_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::book::GetBookRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::book::GetBookRequest, isbn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::book::GetBookViaAuthor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::book::GetBookViaAuthor, author_),
  PROTOBUF_FIELD_OFFSET(::com::book::BookStore_BooksEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::book::BookStore_BooksEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::book::BookStore_BooksEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::com::book::BookStore_BooksEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::book::BookStore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::book::BookStore, name_),
  PROTOBUF_FIELD_OFFSET(::com::book::BookStore, books_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::book::CycleDep1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::book::CycleDep1, dep_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::book::CycleDep2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::book::CycleDep2, dep_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::book::Author)},
  { 6, -1, sizeof(::com::book::InsideOneOfMessage)},
  { 12, -1, sizeof(::com::book::Book_Page)},
  { 18, -1, sizeof(::com::book::Book)},
  { 36, -1, sizeof(::com::book::GetBookRequest)},
  { 42, -1, sizeof(::com::book::GetBookViaAuthor)},
  { 48, 55, sizeof(::com::book::BookStore_BooksEntry_DoNotUse)},
  { 57, -1, sizeof(::com::book::BookStore)},
  { 64, -1, sizeof(::com::book::CycleDep1)},
  { 70, -1, sizeof(::com::book::CycleDep2)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::book::_Author_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::book::_InsideOneOfMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::book::_Book_Page_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::book::_Book_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::book::_GetBookRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::book::_GetBookViaAuthor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::book::_BookStore_BooksEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::book::_BookStore_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::book::_CycleDep1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::book::_CycleDep2_default_instance_),
};

const char descriptor_table_protodef_book_2fsample_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021book/sample.proto\022\010com.book\"\026\n\006Author\022"
  "\014\n\004name\030\001 \001(\t\"#\n\022InsideOneOfMessage\022\r\n\005f"
  "ield\030\001 \001(\t\"\342\003\n\004Book\022\014\n\004isbn\030\001 \001(\003\022\r\n\005tit"
  "le\030\002 \001(\t\022 \n\006Author\030\003 \001(\0132\020.com.book.Auth"
  "or\022\"\n\005pages\030\004 \003(\0132\023.com.book.Book.Page\022\034"
  "\n\022first_oneof_string\030\005 \001(\tH\000\022\031\n\017first_on"
  "eof_int\030\006 \001(\003H\000\0221\n\014availability\030\007 \001(\0162\033."
  "com.book.Book.Availability\022+\n\013recommende"
  "d\030\010 \001(\0162\026.com.book.CanRecommend\022\035\n\023secon"
  "d_oneof_string\030\t \001(\tH\001\022\032\n\020second_oneof_i"
  "nt\030\n \001(\003H\001\022<\n\024second_oneof_message\030\013 \001(\013"
  "2\034.com.book.InsideOneOfMessageH\001\032\025\n\004Page"
  "\022\r\n\005lines\030\001 \003(\t\"/\n\014Availability\022\r\n\tAvail"
  "able\020\000\022\020\n\014NotAvailable\020\001B\r\n\013first_oneofB"
  "\016\n\014second_oneof\"\036\n\016GetBookRequest\022\014\n\004isb"
  "n\030\001 \001(\003\"\"\n\020GetBookViaAuthor\022\016\n\006author\030\001 "
  "\001(\t\"v\n\tBookStore\022\014\n\004name\030\001 \001(\t\022-\n\005books\030"
  "\002 \003(\0132\036.com.book.BookStore.BooksEntry\032,\n"
  "\nBooksEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\t:"
  "\0028\001\"-\n\tCycleDep1\022 \n\003dep\030\001 \001(\0132\023.com.book"
  ".CycleDep2\"-\n\tCycleDep2\022 \n\003dep\030\001 \001(\0132\023.c"
  "om.book.CycleDep1*!\n\014CanRecommend\022\007\n\003Yep"
  "\020\000\022\010\n\004Nope\020\0032\206\002\n\013BookService\0225\n\007GetBook\022"
  "\030.com.book.GetBookRequest\032\016.com.book.Boo"
  "k\"\000\022C\n\021GetBooksViaAuthor\022\032.com.book.GetB"
  "ookViaAuthor\032\016.com.book.Book\"\0000\001\022\?\n\017GetG"
  "reatestBook\022\030.com.book.GetBookRequest\032\016."
  "com.book.Book\"\000(\001\022:\n\010GetBooks\022\030.com.book"
  ".GetBookRequest\032\016.com.book.Book\"\000(\0010\001b\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_book_2fsample_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_book_2fsample_2eproto_sccs[9] = {
  &scc_info_Author_book_2fsample_2eproto.base,
  &scc_info_Book_book_2fsample_2eproto.base,
  &scc_info_Book_Page_book_2fsample_2eproto.base,
  &scc_info_BookStore_book_2fsample_2eproto.base,
  &scc_info_BookStore_BooksEntry_DoNotUse_book_2fsample_2eproto.base,
  &scc_info_CycleDep1_book_2fsample_2eproto.base,
  &scc_info_GetBookRequest_book_2fsample_2eproto.base,
  &scc_info_GetBookViaAuthor_book_2fsample_2eproto.base,
  &scc_info_InsideOneOfMessage_book_2fsample_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_book_2fsample_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_book_2fsample_2eproto = {
  false, false, descriptor_table_protodef_book_2fsample_2eproto, "book/sample.proto", 1165,
  &descriptor_table_book_2fsample_2eproto_once, descriptor_table_book_2fsample_2eproto_sccs, descriptor_table_book_2fsample_2eproto_deps, 9, 0,
  schemas, file_default_instances, TableStruct_book_2fsample_2eproto::offsets,
  file_level_metadata_book_2fsample_2eproto, 10, file_level_enum_descriptors_book_2fsample_2eproto, file_level_service_descriptors_book_2fsample_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_book_2fsample_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_book_2fsample_2eproto)), true);
namespace com {
namespace book {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Book_Availability_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_book_2fsample_2eproto);
  return file_level_enum_descriptors_book_2fsample_2eproto[0];
}
bool Book_Availability_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Book_Availability Book::Available;
constexpr Book_Availability Book::NotAvailable;
constexpr Book_Availability Book::Availability_MIN;
constexpr Book_Availability Book::Availability_MAX;
constexpr int Book::Availability_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CanRecommend_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_book_2fsample_2eproto);
  return file_level_enum_descriptors_book_2fsample_2eproto[1];
}
bool CanRecommend_IsValid(int value) {
  switch (value) {
    case 0:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Author::InitAsDefaultInstance() {
}
class Author::_Internal {
 public:
};

Author::Author(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.book.Author)
}
Author::Author(const Author& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:com.book.Author)
}

void Author::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Author_book_2fsample_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Author::~Author() {
  // @@protoc_insertion_point(destructor:com.book.Author)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Author::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Author::ArenaDtor(void* object) {
  Author* _this = reinterpret_cast< Author* >(object);
  (void)_this;
}
void Author::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Author::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Author& Author::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Author_book_2fsample_2eproto.base);
  return *internal_default_instance();
}


void Author::Clear() {
// @@protoc_insertion_point(message_clear_start:com.book.Author)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Author::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.book.Author.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Author::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.book.Author)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.book.Author.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.book.Author)
  return target;
}

size_t Author::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.book.Author)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Author::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.book.Author)
  GOOGLE_DCHECK_NE(&from, this);
  const Author* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Author>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.book.Author)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.book.Author)
    MergeFrom(*source);
  }
}

void Author::MergeFrom(const Author& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.book.Author)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void Author::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.book.Author)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Author::CopyFrom(const Author& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.book.Author)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Author::IsInitialized() const {
  return true;
}

void Author::InternalSwap(Author* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Author::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InsideOneOfMessage::InitAsDefaultInstance() {
}
class InsideOneOfMessage::_Internal {
 public:
};

InsideOneOfMessage::InsideOneOfMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.book.InsideOneOfMessage)
}
InsideOneOfMessage::InsideOneOfMessage(const InsideOneOfMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_field().empty()) {
    field_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_field(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:com.book.InsideOneOfMessage)
}

void InsideOneOfMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InsideOneOfMessage_book_2fsample_2eproto.base);
  field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

InsideOneOfMessage::~InsideOneOfMessage() {
  // @@protoc_insertion_point(destructor:com.book.InsideOneOfMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InsideOneOfMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  field_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InsideOneOfMessage::ArenaDtor(void* object) {
  InsideOneOfMessage* _this = reinterpret_cast< InsideOneOfMessage* >(object);
  (void)_this;
}
void InsideOneOfMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InsideOneOfMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InsideOneOfMessage& InsideOneOfMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InsideOneOfMessage_book_2fsample_2eproto.base);
  return *internal_default_instance();
}


void InsideOneOfMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:com.book.InsideOneOfMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InsideOneOfMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_field();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.book.InsideOneOfMessage.field"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InsideOneOfMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.book.InsideOneOfMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1;
  if (this->field().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field().data(), static_cast<int>(this->_internal_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.book.InsideOneOfMessage.field");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_field(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.book.InsideOneOfMessage)
  return target;
}

size_t InsideOneOfMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.book.InsideOneOfMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field = 1;
  if (this->field().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsideOneOfMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.book.InsideOneOfMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const InsideOneOfMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InsideOneOfMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.book.InsideOneOfMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.book.InsideOneOfMessage)
    MergeFrom(*source);
  }
}

void InsideOneOfMessage::MergeFrom(const InsideOneOfMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.book.InsideOneOfMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field().size() > 0) {
    _internal_set_field(from._internal_field());
  }
}

void InsideOneOfMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.book.InsideOneOfMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsideOneOfMessage::CopyFrom(const InsideOneOfMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.book.InsideOneOfMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsideOneOfMessage::IsInitialized() const {
  return true;
}

void InsideOneOfMessage::InternalSwap(InsideOneOfMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  field_.Swap(&other->field_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata InsideOneOfMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Book_Page::InitAsDefaultInstance() {
}
class Book_Page::_Internal {
 public:
};

Book_Page::Book_Page(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  lines_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.book.Book.Page)
}
Book_Page::Book_Page(const Book_Page& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      lines_(from.lines_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.book.Book.Page)
}

void Book_Page::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Book_Page_book_2fsample_2eproto.base);
}

Book_Page::~Book_Page() {
  // @@protoc_insertion_point(destructor:com.book.Book.Page)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Book_Page::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Book_Page::ArenaDtor(void* object) {
  Book_Page* _this = reinterpret_cast< Book_Page* >(object);
  (void)_this;
}
void Book_Page::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Book_Page::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Book_Page& Book_Page::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Book_Page_book_2fsample_2eproto.base);
  return *internal_default_instance();
}


void Book_Page::Clear() {
// @@protoc_insertion_point(message_clear_start:com.book.Book.Page)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lines_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Book_Page::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string lines = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_lines();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.book.Book.Page.lines"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Book_Page::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.book.Book.Page)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string lines = 1;
  for (int i = 0, n = this->_internal_lines_size(); i < n; i++) {
    const auto& s = this->_internal_lines(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.book.Book.Page.lines");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.book.Book.Page)
  return target;
}

size_t Book_Page::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.book.Book.Page)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string lines = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(lines_.size());
  for (int i = 0, n = lines_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      lines_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Book_Page::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.book.Book.Page)
  GOOGLE_DCHECK_NE(&from, this);
  const Book_Page* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Book_Page>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.book.Book.Page)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.book.Book.Page)
    MergeFrom(*source);
  }
}

void Book_Page::MergeFrom(const Book_Page& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.book.Book.Page)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lines_.MergeFrom(from.lines_);
}

void Book_Page::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.book.Book.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Book_Page::CopyFrom(const Book_Page& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.book.Book.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Book_Page::IsInitialized() const {
  return true;
}

void Book_Page::InternalSwap(Book_Page* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  lines_.InternalSwap(&other->lines_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Book_Page::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Book::InitAsDefaultInstance() {
  ::com::book::_Book_default_instance_._instance.get_mutable()->author_ = const_cast< ::com::book::Author*>(
      ::com::book::Author::internal_default_instance());
  ::com::book::_Book_default_instance_.first_oneof_string_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::com::book::_Book_default_instance_.first_oneof_int_ = PROTOBUF_LONGLONG(0);
  ::com::book::_Book_default_instance_.second_oneof_string_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::com::book::_Book_default_instance_.second_oneof_int_ = PROTOBUF_LONGLONG(0);
  ::com::book::_Book_default_instance_.second_oneof_message_ = const_cast< ::com::book::InsideOneOfMessage*>(
      ::com::book::InsideOneOfMessage::internal_default_instance());
}
class Book::_Internal {
 public:
  static const ::com::book::Author& author(const Book* msg);
  static const ::com::book::InsideOneOfMessage& second_oneof_message(const Book* msg);
};

const ::com::book::Author&
Book::_Internal::author(const Book* msg) {
  return *msg->author_;
}
const ::com::book::InsideOneOfMessage&
Book::_Internal::second_oneof_message(const Book* msg) {
  return *msg->second_oneof_.second_oneof_message_;
}
void Book::set_allocated_second_oneof_message(::com::book::InsideOneOfMessage* second_oneof_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_second_oneof();
  if (second_oneof_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(second_oneof_message);
    if (message_arena != submessage_arena) {
      second_oneof_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, second_oneof_message, submessage_arena);
    }
    set_has_second_oneof_message();
    second_oneof_.second_oneof_message_ = second_oneof_message;
  }
  // @@protoc_insertion_point(field_set_allocated:com.book.Book.second_oneof_message)
}
Book::Book(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pages_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.book.Book)
}
Book::Book(const Book& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pages_(from.pages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_title(),
      GetArena());
  }
  if (from._internal_has_author()) {
    author_ = new ::com::book::Author(*from.author_);
  } else {
    author_ = nullptr;
  }
  ::memcpy(&isbn_, &from.isbn_,
    static_cast<size_t>(reinterpret_cast<char*>(&recommended_) -
    reinterpret_cast<char*>(&isbn_)) + sizeof(recommended_));
  clear_has_first_oneof();
  switch (from.first_oneof_case()) {
    case kFirstOneofString: {
      _internal_set_first_oneof_string(from._internal_first_oneof_string());
      break;
    }
    case kFirstOneofInt: {
      _internal_set_first_oneof_int(from._internal_first_oneof_int());
      break;
    }
    case FIRST_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_second_oneof();
  switch (from.second_oneof_case()) {
    case kSecondOneofString: {
      _internal_set_second_oneof_string(from._internal_second_oneof_string());
      break;
    }
    case kSecondOneofInt: {
      _internal_set_second_oneof_int(from._internal_second_oneof_int());
      break;
    }
    case kSecondOneofMessage: {
      _internal_mutable_second_oneof_message()->::com::book::InsideOneOfMessage::MergeFrom(from._internal_second_oneof_message());
      break;
    }
    case SECOND_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.book.Book)
}

void Book::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Book_book_2fsample_2eproto.base);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&author_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recommended_) -
      reinterpret_cast<char*>(&author_)) + sizeof(recommended_));
  clear_has_first_oneof();
  clear_has_second_oneof();
}

Book::~Book() {
  // @@protoc_insertion_point(destructor:com.book.Book)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Book::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete author_;
  if (has_first_oneof()) {
    clear_first_oneof();
  }
  if (has_second_oneof()) {
    clear_second_oneof();
  }
}

void Book::ArenaDtor(void* object) {
  Book* _this = reinterpret_cast< Book* >(object);
  (void)_this;
}
void Book::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Book::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Book& Book::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Book_book_2fsample_2eproto.base);
  return *internal_default_instance();
}


void Book::clear_first_oneof() {
// @@protoc_insertion_point(one_of_clear_start:com.book.Book)
  switch (first_oneof_case()) {
    case kFirstOneofString: {
      first_oneof_.first_oneof_string_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kFirstOneofInt: {
      // No need to clear
      break;
    }
    case FIRST_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FIRST_ONEOF_NOT_SET;
}

void Book::clear_second_oneof() {
// @@protoc_insertion_point(one_of_clear_start:com.book.Book)
  switch (second_oneof_case()) {
    case kSecondOneofString: {
      second_oneof_.second_oneof_string_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kSecondOneofInt: {
      // No need to clear
      break;
    }
    case kSecondOneofMessage: {
      if (GetArena() == nullptr) {
        delete second_oneof_.second_oneof_message_;
      }
      break;
    }
    case SECOND_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = SECOND_ONEOF_NOT_SET;
}


void Book::Clear() {
// @@protoc_insertion_point(message_clear_start:com.book.Book)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pages_.Clear();
  title_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && author_ != nullptr) {
    delete author_;
  }
  author_ = nullptr;
  ::memset(&isbn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recommended_) -
      reinterpret_cast<char*>(&isbn_)) + sizeof(recommended_));
  clear_first_oneof();
  clear_second_oneof();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Book::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 isbn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          isbn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.book.Book.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.book.Author Author = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_author(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.book.Book.Page pages = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string first_oneof_string = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_first_oneof_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.book.Book.first_oneof_string"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 first_oneof_int = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _internal_set_first_oneof_int(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.book.Book.Availability availability = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_availability(static_cast<::com::book::Book_Availability>(val));
        } else goto handle_unusual;
        continue;
      // .com.book.CanRecommend recommended = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_recommended(static_cast<::com::book::CanRecommend>(val));
        } else goto handle_unusual;
        continue;
      // string second_oneof_string = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_second_oneof_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.book.Book.second_oneof_string"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 second_oneof_int = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _internal_set_second_oneof_int(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.book.InsideOneOfMessage second_oneof_message = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_second_oneof_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Book::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.book.Book)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 isbn = 1;
  if (this->isbn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_isbn(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.book.Book.title");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_title(), target);
  }

  // .com.book.Author Author = 3;
  if (this->has_author()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::author(this), target, stream);
  }

  // repeated .com.book.Book.Page pages = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pages_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_pages(i), target, stream);
  }

  // string first_oneof_string = 5;
  if (_internal_has_first_oneof_string()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_oneof_string().data(), static_cast<int>(this->_internal_first_oneof_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.book.Book.first_oneof_string");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_first_oneof_string(), target);
  }

  // int64 first_oneof_int = 6;
  if (_internal_has_first_oneof_int()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_first_oneof_int(), target);
  }

  // .com.book.Book.Availability availability = 7;
  if (this->availability() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_availability(), target);
  }

  // .com.book.CanRecommend recommended = 8;
  if (this->recommended() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_recommended(), target);
  }

  // string second_oneof_string = 9;
  if (_internal_has_second_oneof_string()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_second_oneof_string().data(), static_cast<int>(this->_internal_second_oneof_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.book.Book.second_oneof_string");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_second_oneof_string(), target);
  }

  // int64 second_oneof_int = 10;
  if (_internal_has_second_oneof_int()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_second_oneof_int(), target);
  }

  // .com.book.InsideOneOfMessage second_oneof_message = 11;
  if (_internal_has_second_oneof_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::second_oneof_message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.book.Book)
  return target;
}

size_t Book::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.book.Book)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.book.Book.Page pages = 4;
  total_size += 1UL * this->_internal_pages_size();
  for (const auto& msg : this->pages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // .com.book.Author Author = 3;
  if (this->has_author()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *author_);
  }

  // int64 isbn = 1;
  if (this->isbn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_isbn());
  }

  // .com.book.Book.Availability availability = 7;
  if (this->availability() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_availability());
  }

  // .com.book.CanRecommend recommended = 8;
  if (this->recommended() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_recommended());
  }

  switch (first_oneof_case()) {
    // string first_oneof_string = 5;
    case kFirstOneofString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_first_oneof_string());
      break;
    }
    // int64 first_oneof_int = 6;
    case kFirstOneofInt: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_first_oneof_int());
      break;
    }
    case FIRST_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (second_oneof_case()) {
    // string second_oneof_string = 9;
    case kSecondOneofString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_second_oneof_string());
      break;
    }
    // int64 second_oneof_int = 10;
    case kSecondOneofInt: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_second_oneof_int());
      break;
    }
    // .com.book.InsideOneOfMessage second_oneof_message = 11;
    case kSecondOneofMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *second_oneof_.second_oneof_message_);
      break;
    }
    case SECOND_ONEOF_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Book::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.book.Book)
  GOOGLE_DCHECK_NE(&from, this);
  const Book* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Book>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.book.Book)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.book.Book)
    MergeFrom(*source);
  }
}

void Book::MergeFrom(const Book& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.book.Book)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pages_.MergeFrom(from.pages_);
  if (from.title().size() > 0) {
    _internal_set_title(from._internal_title());
  }
  if (from.has_author()) {
    _internal_mutable_author()->::com::book::Author::MergeFrom(from._internal_author());
  }
  if (from.isbn() != 0) {
    _internal_set_isbn(from._internal_isbn());
  }
  if (from.availability() != 0) {
    _internal_set_availability(from._internal_availability());
  }
  if (from.recommended() != 0) {
    _internal_set_recommended(from._internal_recommended());
  }
  switch (from.first_oneof_case()) {
    case kFirstOneofString: {
      _internal_set_first_oneof_string(from._internal_first_oneof_string());
      break;
    }
    case kFirstOneofInt: {
      _internal_set_first_oneof_int(from._internal_first_oneof_int());
      break;
    }
    case FIRST_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.second_oneof_case()) {
    case kSecondOneofString: {
      _internal_set_second_oneof_string(from._internal_second_oneof_string());
      break;
    }
    case kSecondOneofInt: {
      _internal_set_second_oneof_int(from._internal_second_oneof_int());
      break;
    }
    case kSecondOneofMessage: {
      _internal_mutable_second_oneof_message()->::com::book::InsideOneOfMessage::MergeFrom(from._internal_second_oneof_message());
      break;
    }
    case SECOND_ONEOF_NOT_SET: {
      break;
    }
  }
}

void Book::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.book.Book)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Book::CopyFrom(const Book& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.book.Book)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Book::IsInitialized() const {
  return true;
}

void Book::InternalSwap(Book* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pages_.InternalSwap(&other->pages_);
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Book, recommended_)
      + sizeof(Book::recommended_)
      - PROTOBUF_FIELD_OFFSET(Book, author_)>(
          reinterpret_cast<char*>(&author_),
          reinterpret_cast<char*>(&other->author_));
  swap(first_oneof_, other->first_oneof_);
  swap(second_oneof_, other->second_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Book::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetBookRequest::InitAsDefaultInstance() {
}
class GetBookRequest::_Internal {
 public:
};

GetBookRequest::GetBookRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.book.GetBookRequest)
}
GetBookRequest::GetBookRequest(const GetBookRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  isbn_ = from.isbn_;
  // @@protoc_insertion_point(copy_constructor:com.book.GetBookRequest)
}

void GetBookRequest::SharedCtor() {
  isbn_ = PROTOBUF_LONGLONG(0);
}

GetBookRequest::~GetBookRequest() {
  // @@protoc_insertion_point(destructor:com.book.GetBookRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBookRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetBookRequest::ArenaDtor(void* object) {
  GetBookRequest* _this = reinterpret_cast< GetBookRequest* >(object);
  (void)_this;
}
void GetBookRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBookRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBookRequest& GetBookRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBookRequest_book_2fsample_2eproto.base);
  return *internal_default_instance();
}


void GetBookRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.book.GetBookRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  isbn_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBookRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 isbn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          isbn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBookRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.book.GetBookRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 isbn = 1;
  if (this->isbn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_isbn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.book.GetBookRequest)
  return target;
}

size_t GetBookRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.book.GetBookRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 isbn = 1;
  if (this->isbn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_isbn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBookRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.book.GetBookRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBookRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBookRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.book.GetBookRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.book.GetBookRequest)
    MergeFrom(*source);
  }
}

void GetBookRequest::MergeFrom(const GetBookRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.book.GetBookRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isbn() != 0) {
    _internal_set_isbn(from._internal_isbn());
  }
}

void GetBookRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.book.GetBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBookRequest::CopyFrom(const GetBookRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.book.GetBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBookRequest::IsInitialized() const {
  return true;
}

void GetBookRequest::InternalSwap(GetBookRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(isbn_, other->isbn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBookRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetBookViaAuthor::InitAsDefaultInstance() {
}
class GetBookViaAuthor::_Internal {
 public:
};

GetBookViaAuthor::GetBookViaAuthor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.book.GetBookViaAuthor)
}
GetBookViaAuthor::GetBookViaAuthor(const GetBookViaAuthor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  author_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_author().empty()) {
    author_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_author(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:com.book.GetBookViaAuthor)
}

void GetBookViaAuthor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBookViaAuthor_book_2fsample_2eproto.base);
  author_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetBookViaAuthor::~GetBookViaAuthor() {
  // @@protoc_insertion_point(destructor:com.book.GetBookViaAuthor)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBookViaAuthor::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  author_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBookViaAuthor::ArenaDtor(void* object) {
  GetBookViaAuthor* _this = reinterpret_cast< GetBookViaAuthor* >(object);
  (void)_this;
}
void GetBookViaAuthor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBookViaAuthor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBookViaAuthor& GetBookViaAuthor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBookViaAuthor_book_2fsample_2eproto.base);
  return *internal_default_instance();
}


void GetBookViaAuthor::Clear() {
// @@protoc_insertion_point(message_clear_start:com.book.GetBookViaAuthor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  author_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBookViaAuthor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string author = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_author();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.book.GetBookViaAuthor.author"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBookViaAuthor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.book.GetBookViaAuthor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_author().data(), static_cast<int>(this->_internal_author().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.book.GetBookViaAuthor.author");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_author(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.book.GetBookViaAuthor)
  return target;
}

size_t GetBookViaAuthor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.book.GetBookViaAuthor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_author());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBookViaAuthor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.book.GetBookViaAuthor)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBookViaAuthor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBookViaAuthor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.book.GetBookViaAuthor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.book.GetBookViaAuthor)
    MergeFrom(*source);
  }
}

void GetBookViaAuthor::MergeFrom(const GetBookViaAuthor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.book.GetBookViaAuthor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.author().size() > 0) {
    _internal_set_author(from._internal_author());
  }
}

void GetBookViaAuthor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.book.GetBookViaAuthor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBookViaAuthor::CopyFrom(const GetBookViaAuthor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.book.GetBookViaAuthor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBookViaAuthor::IsInitialized() const {
  return true;
}

void GetBookViaAuthor::InternalSwap(GetBookViaAuthor* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  author_.Swap(&other->author_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBookViaAuthor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

BookStore_BooksEntry_DoNotUse::BookStore_BooksEntry_DoNotUse() {}
BookStore_BooksEntry_DoNotUse::BookStore_BooksEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void BookStore_BooksEntry_DoNotUse::MergeFrom(const BookStore_BooksEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata BookStore_BooksEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void BookStore_BooksEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void BookStore::InitAsDefaultInstance() {
}
class BookStore::_Internal {
 public:
};

BookStore::BookStore(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  books_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.book.BookStore)
}
BookStore::BookStore(const BookStore& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  books_.MergeFrom(from.books_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:com.book.BookStore)
}

void BookStore::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BookStore_book_2fsample_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BookStore::~BookStore() {
  // @@protoc_insertion_point(destructor:com.book.BookStore)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BookStore::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BookStore::ArenaDtor(void* object) {
  BookStore* _this = reinterpret_cast< BookStore* >(object);
  (void)_this;
}
void BookStore::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BookStore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BookStore& BookStore::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BookStore_book_2fsample_2eproto.base);
  return *internal_default_instance();
}


void BookStore::Clear() {
// @@protoc_insertion_point(message_clear_start:com.book.BookStore)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  books_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BookStore::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.book.BookStore.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<int64, string> books = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&books_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BookStore::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.book.BookStore)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.book.BookStore.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // map<int64, string> books = 2;
  if (!this->_internal_books().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, std::string >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "com.book.BookStore.BooksEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_books().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_books().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, std::string >::const_iterator
          it = this->_internal_books().begin();
          it != this->_internal_books().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = BookStore_BooksEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)].second));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, std::string >::const_iterator
          it = this->_internal_books().begin();
          it != this->_internal_books().end(); ++it) {
        target = BookStore_BooksEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.book.BookStore)
  return target;
}

size_t BookStore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.book.BookStore)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, string> books = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_books_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, std::string >::const_iterator
      it = this->_internal_books().begin();
      it != this->_internal_books().end(); ++it) {
    total_size += BookStore_BooksEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BookStore::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.book.BookStore)
  GOOGLE_DCHECK_NE(&from, this);
  const BookStore* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BookStore>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.book.BookStore)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.book.BookStore)
    MergeFrom(*source);
  }
}

void BookStore::MergeFrom(const BookStore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.book.BookStore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  books_.MergeFrom(from.books_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void BookStore::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.book.BookStore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BookStore::CopyFrom(const BookStore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.book.BookStore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BookStore::IsInitialized() const {
  return true;
}

void BookStore::InternalSwap(BookStore* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  books_.Swap(&other->books_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BookStore::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CycleDep1::InitAsDefaultInstance() {
  ::com::book::_CycleDep1_default_instance_._instance.get_mutable()->dep_ = const_cast< ::com::book::CycleDep2*>(
      ::com::book::CycleDep2::internal_default_instance());
}
class CycleDep1::_Internal {
 public:
  static const ::com::book::CycleDep2& dep(const CycleDep1* msg);
};

const ::com::book::CycleDep2&
CycleDep1::_Internal::dep(const CycleDep1* msg) {
  return *msg->dep_;
}
CycleDep1::CycleDep1(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.book.CycleDep1)
}
CycleDep1::CycleDep1(const CycleDep1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dep()) {
    dep_ = new ::com::book::CycleDep2(*from.dep_);
  } else {
    dep_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.book.CycleDep1)
}

void CycleDep1::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CycleDep1_book_2fsample_2eproto.base);
  dep_ = nullptr;
}

CycleDep1::~CycleDep1() {
  // @@protoc_insertion_point(destructor:com.book.CycleDep1)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CycleDep1::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete dep_;
}

void CycleDep1::ArenaDtor(void* object) {
  CycleDep1* _this = reinterpret_cast< CycleDep1* >(object);
  (void)_this;
}
void CycleDep1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CycleDep1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CycleDep1& CycleDep1::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CycleDep1_book_2fsample_2eproto.base);
  return *internal_default_instance();
}


void CycleDep1::Clear() {
// @@protoc_insertion_point(message_clear_start:com.book.CycleDep1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && dep_ != nullptr) {
    delete dep_;
  }
  dep_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CycleDep1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.book.CycleDep2 dep = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dep(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CycleDep1::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.book.CycleDep1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.book.CycleDep2 dep = 1;
  if (this->has_dep()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dep(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.book.CycleDep1)
  return target;
}

size_t CycleDep1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.book.CycleDep1)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.book.CycleDep2 dep = 1;
  if (this->has_dep()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dep_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CycleDep1::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.book.CycleDep1)
  GOOGLE_DCHECK_NE(&from, this);
  const CycleDep1* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CycleDep1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.book.CycleDep1)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.book.CycleDep1)
    MergeFrom(*source);
  }
}

void CycleDep1::MergeFrom(const CycleDep1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.book.CycleDep1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dep()) {
    _internal_mutable_dep()->::com::book::CycleDep2::MergeFrom(from._internal_dep());
  }
}

void CycleDep1::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.book.CycleDep1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CycleDep1::CopyFrom(const CycleDep1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.book.CycleDep1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CycleDep1::IsInitialized() const {
  return true;
}

void CycleDep1::InternalSwap(CycleDep1* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(dep_, other->dep_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CycleDep1::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CycleDep2::InitAsDefaultInstance() {
  ::com::book::_CycleDep2_default_instance_._instance.get_mutable()->dep_ = const_cast< ::com::book::CycleDep1*>(
      ::com::book::CycleDep1::internal_default_instance());
}
class CycleDep2::_Internal {
 public:
  static const ::com::book::CycleDep1& dep(const CycleDep2* msg);
};

const ::com::book::CycleDep1&
CycleDep2::_Internal::dep(const CycleDep2* msg) {
  return *msg->dep_;
}
CycleDep2::CycleDep2(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.book.CycleDep2)
}
CycleDep2::CycleDep2(const CycleDep2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dep()) {
    dep_ = new ::com::book::CycleDep1(*from.dep_);
  } else {
    dep_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.book.CycleDep2)
}

void CycleDep2::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CycleDep1_book_2fsample_2eproto.base);
  dep_ = nullptr;
}

CycleDep2::~CycleDep2() {
  // @@protoc_insertion_point(destructor:com.book.CycleDep2)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CycleDep2::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete dep_;
}

void CycleDep2::ArenaDtor(void* object) {
  CycleDep2* _this = reinterpret_cast< CycleDep2* >(object);
  (void)_this;
}
void CycleDep2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CycleDep2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CycleDep2& CycleDep2::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CycleDep1_book_2fsample_2eproto.base);
  return *internal_default_instance();
}


void CycleDep2::Clear() {
// @@protoc_insertion_point(message_clear_start:com.book.CycleDep2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && dep_ != nullptr) {
    delete dep_;
  }
  dep_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CycleDep2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.book.CycleDep1 dep = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dep(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CycleDep2::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.book.CycleDep2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.book.CycleDep1 dep = 1;
  if (this->has_dep()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dep(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.book.CycleDep2)
  return target;
}

size_t CycleDep2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.book.CycleDep2)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.book.CycleDep1 dep = 1;
  if (this->has_dep()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dep_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CycleDep2::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.book.CycleDep2)
  GOOGLE_DCHECK_NE(&from, this);
  const CycleDep2* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CycleDep2>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.book.CycleDep2)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.book.CycleDep2)
    MergeFrom(*source);
  }
}

void CycleDep2::MergeFrom(const CycleDep2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.book.CycleDep2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dep()) {
    _internal_mutable_dep()->::com::book::CycleDep1::MergeFrom(from._internal_dep());
  }
}

void CycleDep2::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.book.CycleDep2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CycleDep2::CopyFrom(const CycleDep2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.book.CycleDep2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CycleDep2::IsInitialized() const {
  return true;
}

void CycleDep2::InternalSwap(CycleDep2* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(dep_, other->dep_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CycleDep2::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace book
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::book::Author* Arena::CreateMaybeMessage< ::com::book::Author >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::book::Author >(arena);
}
template<> PROTOBUF_NOINLINE ::com::book::InsideOneOfMessage* Arena::CreateMaybeMessage< ::com::book::InsideOneOfMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::book::InsideOneOfMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::com::book::Book_Page* Arena::CreateMaybeMessage< ::com::book::Book_Page >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::book::Book_Page >(arena);
}
template<> PROTOBUF_NOINLINE ::com::book::Book* Arena::CreateMaybeMessage< ::com::book::Book >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::book::Book >(arena);
}
template<> PROTOBUF_NOINLINE ::com::book::GetBookRequest* Arena::CreateMaybeMessage< ::com::book::GetBookRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::book::GetBookRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::com::book::GetBookViaAuthor* Arena::CreateMaybeMessage< ::com::book::GetBookViaAuthor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::book::GetBookViaAuthor >(arena);
}
template<> PROTOBUF_NOINLINE ::com::book::BookStore_BooksEntry_DoNotUse* Arena::CreateMaybeMessage< ::com::book::BookStore_BooksEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::book::BookStore_BooksEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::com::book::BookStore* Arena::CreateMaybeMessage< ::com::book::BookStore >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::book::BookStore >(arena);
}
template<> PROTOBUF_NOINLINE ::com::book::CycleDep1* Arena::CreateMaybeMessage< ::com::book::CycleDep1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::book::CycleDep1 >(arena);
}
template<> PROTOBUF_NOINLINE ::com::book::CycleDep2* Arena::CreateMaybeMessage< ::com::book::CycleDep2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::book::CycleDep2 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
